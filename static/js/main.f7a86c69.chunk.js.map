{"version":3,"sources":["components/useLocalStorage.js","components/ActionButton.js","views/Question.js","components/MediaCard.js","App.js","components/useUpdateLogger.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","savedValue","JSON","parse","localStorage","getItem","Function","getSavedValue","value","setValue","useEffect","setItem","stringify","ActionButton","props","showAnswer","option","answer","handleClick","Button","variant","size","color","endIcon","Check","Close","onClick","console","log","Question","words","currentLevel","questionEachLevel","handleQuit","unlockNextLevel","handleStartClick","number","setNumber","setShowAnswer","done","setDone","correct","setCorrect","endText","setEndText","e","currentTarget","prevCorrect","setTimeout","prevNumber","rate","failedText","passedTest","getEndText","handleReset","question","map","word","i","Chip","label","options","Fab","className","aria-label","ArrowBack","Send","Number","event","Replay","useStyles","makeStyles","root","width","textAlign","verticalAlign","margin","media","height","button","MediaCard","classes","title","description","level","disabled","Card","CardActionArea","CardContent","Typography","gutterBottom","component","CardActions","App","showQuestion","setShowQuestion","setWords","setCurrentLevel","userLevel","setUserLevel","j","cards","data","desc","example","lowerRange","upperRange","filter","wordsArray","id","prevLevel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7a86c69.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nfunction getSavedValue(key, initialValue) {\r\n    const savedValue = JSON.parse(localStorage.getItem(key))\r\n    if(savedValue) return savedValue\r\n    if(initialValue instanceof Function) return initialValue()\r\n    return initialValue\r\n}\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const [value, setValue] = useState(()=>{\r\n        return getSavedValue(key, initialValue)\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    },[value])\r\n\r\n    return [value, setValue]\r\n}","import React from 'react'\r\nimport {Button} from '@material-ui/core';\r\nimport {Check,Close} from '@material-ui/icons'\r\n\r\nexport default function ActionButton(props) {\r\n    const {showAnswer,option,answer,handleClick} = props\r\n    function placeholderClick() {\r\n        console.log(\"block double click when waiting\")\r\n    }\r\n    return (\r\n        <Button \r\n        variant={showAnswer?\"contained\":\"outlined\"} \r\n        size=\"large\" \r\n        color={showAnswer ? (option===answer?\"primary\":\"secondary\") : \"primary\"}\r\n        endIcon={showAnswer && (option===answer?<Check />:<Close />)}\r\n        onClick={!showAnswer ? handleClick : placeholderClick} \r\n        value={option}>{option}</Button>\r\n    )\r\n}\r\n","\r\nimport React, {useState} from 'react';\r\nimport '../App.css';\r\nimport {Button,Chip,Fab} from '@material-ui/core';\r\nimport {ArrowBack,Send,Replay} from '@material-ui/icons'\r\nimport ActionButton from '../components/ActionButton'\r\n\r\nexport default function Question(props) {\r\n \r\n  const timeBetweenQuestions = 2000\r\n  const passRate = 0.5;\r\n\r\n  const {words, currentLevel, questionEachLevel, handleQuit, unlockNextLevel, handleStartClick} = props\r\n  const [number, setNumber] = useState(0)\r\n  const [showAnswer, setShowAnswer] = useState(false)\r\n  const [done, setDone] = useState(false)\r\n  const [correct,setCorrect] = useState(0)\r\n  const [endText, setEndText] = useState(\"\")\r\n\r\n  function handleClick(e) {\r\n    // console.log(words[number].answer, \"?=\", e.currentTarget.value)\r\n    setShowAnswer(true)\r\n    if(words[number].answer === e.currentTarget.value) {\r\n        setCorrect(prevCorrect => {\r\n            return prevCorrect + 1\r\n        })\r\n    }\r\n    setTimeout(()=>{\r\n      if(number < questionEachLevel) {\r\n        setNumber(prevNumber => {\r\n          return prevNumber + 1\r\n        })\r\n        setShowAnswer(false)\r\n      }else{\r\n        setDone(true)\r\n        const rate = correct / questionEachLevel\r\n        if(rate > passRate){\r\n            unlockNextLevel()\r\n        }\r\n        setEndText(getEndText(rate))\r\n      }\r\n    },timeBetweenQuestions)\r\n  }\r\n\r\n  function getEndText(rate){\r\n    const failedText = \"You didn't unlock next level. Please try again.\"\r\n    const passedTest = \"You successfully unlocked next level.\"\r\n    if(rate<0.25) return `Good try! ${failedText}`\r\n    if(rate>=0.25 && rate<0.5) return `Well done! ${failedText}`\r\n    if(rate>=0.5 && rate<0.75) return `Excellent! ${passedTest}`\r\n    if(rate>=0.75 && rate<=1) return `Congratulations! You are super! ${passedTest}`\r\n  }\r\n\r\n  function handleReset() {\r\n      setNumber(0)\r\n      setShowAnswer(false)\r\n      setDone(false)\r\n      setCorrect(0)\r\n      setEndText(\"\")\r\n  }\r\n\r\n  const question = words[number].words.map((word,i)=>{\r\n    return (\r\n      <span key={i}>\r\n        <Chip label={word} variant=\"outlined\" /> {i!==3 && (i===1? ' :: ':' : ')}\r\n      </span>\r\n    )\r\n  })\r\n\r\n  const answer = words[number].options.map((option,i)=>{\r\n    return (\r\n      <span key={i}>\r\n        <ActionButton showAnswer={showAnswer} option={option} answer={words[number].answer} handleClick={handleClick} /> {i===1 && <br />}\r\n      </span>\r\n    )\r\n  })\r\n\r\n  return (\r\n      <>\r\n        <Fab className=\"quitButton\" color=\"secondary\" aria-label=\"add\" onClick = {handleQuit}>\r\n          <ArrowBack />\r\n        </Fab>\r\n        <h1>Level {currentLevel}</h1><br />\r\n        {!done ? \r\n            <div>\r\n                <div className=\"question\">\r\n                    {question}\r\n                </div>\r\n                <div className=\"answer\">\r\n                    {answer}\r\n                </div>\r\n                <br />\r\n            </div>\r\n            :\r\n            <div>\r\n                <h3>{endText}</h3>\r\n                {\r\n                    correct / questionEachLevel > passRate ? \r\n                    <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<Send />}\r\n                    value={Number(currentLevel)+1}\r\n                    onClick = {(event)=>{\r\n                            handleStartClick(event);\r\n                            handleReset();\r\n                        }\r\n                    }\r\n                    >\r\n                        Go Next Level\r\n                    </Button>\r\n                    :\r\n                    <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<Replay />}\r\n                    onClick = {handleReset}\r\n                    >\r\n                        Try Again\r\n                    </Button>\r\n                }\r\n            </div>\r\n        }\r\n      </>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 240,\r\n    textAlign: \"left\",\r\n    verticalAlign: \"top\",\r\n    margin: \"0 10px 30px 10px\"\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  button: {\r\n    margin: \"0 5px 15px\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles()\r\n  const {title, description, level, handleStartClick, disabled} = props\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        {/* <CardMedia\r\n          className={classes.media}\r\n          image=\"https://via.placeholder.com/250x150\"\r\n          title={title}\r\n        /> */}\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button variant=\"contained\" color=\"primary\" size=\"large\" \r\n        disabled={disabled} className={classes.button} value={level} onClick={handleStartClick}>\r\n          Start\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Chip} from '@material-ui/core';\nimport useLocalStorage from './components/useLocalStorage';\nimport useUpdateLogger from './components/useUpdateLogger';\nimport data from './data/words.json';\nimport Question from './views/Question'\nimport MediaCard from './components/MediaCard'\n\nfunction App() {\n\n  const questionEachLevel = 25\n  const [showQuestion, setShowQuestion] = useState(false)\n  const [words, setWords] = useState([])\n  const [currentLevel, setCurrentLevel] = useState(1)\n  const [userLevel, setUserLevel] = useLocalStorage(\"userLevel\",1)\n  useUpdateLogger(userLevel)\n  \n  let j = 0\n  const cards = data.map((words,i) => {\n    if(i%questionEachLevel === 0) {\n      j++\n      let desc = `Click START to challenge level ${j} `\n      let disabled = false\n      if(userLevel<j) {\n        desc = `Please finish level ${j-1} to unlock`\n        disabled = true\n      }\n      return (\n        <MediaCard key={i} title={\"Level \"+j} level={j} description={desc} disabled={disabled} handleStartClick={handleStartClick} />  \n      )\n    }\n    return \"\"\n  })\n\n  const exampleData = [\"tree\",\"leaf\",\"flower\",\"(petal)\"]\n  const example = exampleData.map((word,i)=>{\n    return (\n      <span key={i}>\n        <Chip label={word} variant=\"outlined\" /> {i!==3 && (i===1? ' :: ':' : ')}\n      </span>\n    )\n  })\n\n  function handleStartClick(e){\n    const level = e.currentTarget.value\n    setCurrentLevel(Number(level))\n    const lowerRange = questionEachLevel*(level-1)\n    const upperRange = questionEachLevel*level\n    setWords(data.filter((wordsArray,i)=>{\n        return wordsArray.id >= lowerRange && wordsArray.id <= upperRange\n    }))\n    setShowQuestion(true)\n  }\n\n  function handleQuit() {\n    setShowQuestion(false)\n  }\n\n  function unlockNextLevel() {\n    if(userLevel === currentLevel){\n      setUserLevel(prevLevel => {\n        return prevLevel + 1\n      })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        !showQuestion ?\n        <div>\n          <h1>Analogy Master</h1>\n          <p>An analogy is a comparison of two things to show their relation of the similarities, logical relations, geographical, historical, or differences.</p>\n          <h3>Let's try this:</h3>\n          <div className=\"question\">\n            {example}\n          </div>\n          <p className=\"explanation\"><b><u>Tree</u></b> is to <b><u>leaf</u></b> as <b><u>flower</u></b> is to <b><u>petal</u></b>.</p><br />\n          <div className=\"listCards\">\n            {/* <MediaCard title=\"Before Start\" description={\"See more examples from here\"} handleStartClick={handleStartClick} />   */}\n            {cards}\n          </div>\n          <p className=\"hints\">Every level has {questionEachLevel} questions. Pass 50% can unlock next level.</p>\n        </div>\n        :\n        <Question words={words} currentLevel={currentLevel} questionEachLevel={questionEachLevel} \n        handleQuit={handleQuit} unlockNextLevel={unlockNextLevel} handleStartClick={handleStartClick} /> \n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\r\n\r\nexport default function useUpdateLogger(value){\r\n    useEffect(()=>{\r\n        console.log(value)\r\n    },[value])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
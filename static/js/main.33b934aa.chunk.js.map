{"version":3,"sources":["components/useLocalStorage.js","components/ActionButton.js","views/Question.js","components/MediaCard.js","App.js","components/useUpdateLogger.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","savedValue","JSON","parse","localStorage","getItem","Function","getSavedValue","value","setValue","useEffect","setItem","stringify","ActionButton","props","showAnswer","option","answer","handleClick","Button","variant","size","color","endIcon","Check","Close","onClick","console","log","Question","words","currentLevel","questionEachLevel","handleQuit","unlockNextLevel","handleStartClick","number","setNumber","setShowAnswer","done","setDone","correct","setCorrect","endText","setEndText","yourAnswer","setYourAnswer","e","currentTarget","prevCorrect","setTimeout","prevNumber","rate","failedText","passedTest","getEndText","handleReset","question","map","word","i","Chip","label","className","options","Fab","aria-label","ArrowBack","Send","Number","event","Replay","useStyles","makeStyles","root","width","textAlign","verticalAlign","margin","media","height","button","MediaCard","classes","title","description","level","disabled","Card","CardActionArea","CardContent","Typography","gutterBottom","component","CardActions","App","showQuestion","setShowQuestion","setWords","setCurrentLevel","userLevel","setUserLevel","j","cards","data","desc","example","lowerRange","upperRange","filter","wordsArray","id","prevLevel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33b934aa.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\n\nfunction getSavedValue(key, initialValue) {\n    const savedValue = JSON.parse(localStorage.getItem(key))\n    if(savedValue) return savedValue\n    if(initialValue instanceof Function) return initialValue()\n    return initialValue\n}\n\nexport default function useLocalStorage(key, initialValue) {\n    const [value, setValue] = useState(()=>{\n        return getSavedValue(key, initialValue)\n    })\n\n    useEffect(()=>{\n        localStorage.setItem(key, JSON.stringify(value))\n    },[value])\n\n    return [value, setValue]\n}","import React from 'react'\nimport {Button} from '@material-ui/core';\nimport {Check,Close} from '@material-ui/icons'\n\nexport default function ActionButton(props) {\n    const {showAnswer,option,answer,handleClick} = props\n    function placeholderClick() {\n        console.log(\"block double click when waiting\")\n    }\n    return (\n        <Button \n        variant={showAnswer?\"contained\":\"outlined\"} \n        size=\"large\" \n        color={showAnswer ? (option===answer?\"primary\":\"secondary\") : \"primary\"}\n        endIcon={showAnswer && (option===answer?<Check />:<Close />)}\n        onClick={!showAnswer ? handleClick : placeholderClick} \n        value={option}>{option}</Button>\n    )\n}\n","\nimport React, {useState} from 'react';\nimport '../App.css';\nimport {Button,Chip,Fab} from '@material-ui/core';\nimport {ArrowBack,Send,Replay} from '@material-ui/icons'\nimport ActionButton from '../components/ActionButton'\n\nexport default function Question(props) {\n \n  const timeBetweenQuestions = 2000\n  const passRate = 0.5;\n\n  const {words, currentLevel, questionEachLevel, handleQuit, unlockNextLevel, handleStartClick} = props\n  const [number, setNumber] = useState(0)\n  const [showAnswer, setShowAnswer] = useState(false)\n  const [done, setDone] = useState(false)\n  const [correct,setCorrect] = useState(0)\n  const [endText, setEndText] = useState(\"\")\n  const [yourAnswer, setYourAnswer] = useState(\"\")\n\n  function handleClick(e) {\n    // console.log(words[number].answer, \"?=\", e.currentTarget.value)\n    setShowAnswer(true)\n    setYourAnswer(\"You seleted: \"+e.currentTarget.value)\n    if(words[number].answer === e.currentTarget.value) {\n        setCorrect(prevCorrect => {\n            return prevCorrect + 1\n        })\n    }\n    setTimeout(()=>{\n      if(number < questionEachLevel) {\n        setNumber(prevNumber => {\n          return prevNumber + 1\n        })\n        setShowAnswer(false)\n        setYourAnswer(\"\")\n      }else{\n        setDone(true)\n        const rate = correct / questionEachLevel\n        if(rate > passRate){\n            unlockNextLevel()\n        }\n        setEndText(getEndText(rate))\n      }\n    },timeBetweenQuestions)\n  }\n\n  function getEndText(rate){\n    const failedText = \"You didn't unlock next level. Please try again.\"\n    const passedTest = \"You successfully unlocked next level.\"\n    if(rate<0.25) return `Good try! ${failedText}`\n    if(rate>=0.25 && rate<0.5) return `Well done! ${failedText}`\n    if(rate>=0.5 && rate<0.75) return `Excellent! ${passedTest}`\n    if(rate>=0.75 && rate<=1) return `Congratulations! You are super! ${passedTest}`\n  }\n\n  function handleReset() {\n      setNumber(0)\n      setShowAnswer(false)\n      setDone(false)\n      setCorrect(0)\n      setYourAnswer(\"\")\n      setEndText(\"\")\n  }\n\n  const question = words[number].words.map((word,i)=>{\n    return (\n      <>\n        <span key={i}>\n          <Chip label={word} variant=\"outlined\" /> {i!==3 && (i===1? ' :: ':' : ')}\n        </span>\n        {i===1&&<span className=\"newMobileRow\"></span>}\n      </>\n    )\n  })\n\n  const answer = words[number].options.map((option,i)=>{\n    return (\n      <span key={i}>\n        <ActionButton showAnswer={showAnswer} option={option} answer={words[number].answer} handleClick={handleClick} /> {i===1 && <br />}\n      </span>\n    )\n  })\n\n  return (\n      <>\n        <Fab className=\"quitButton\" color=\"secondary\" aria-label=\"add\" onClick = {handleQuit}>\n          <ArrowBack />\n        </Fab>\n        <h1>Level {currentLevel}</h1><br />\n        {!done ? \n            <div>\n                <div className=\"question\">\n                    {question}\n                </div>\n                <div className=\"answer\">\n                    {answer}\n                </div>\n                <br />\n                <p className=\"hints\">{yourAnswer}</p>\n            </div>\n            :\n            <div>\n                <h3>{endText}</h3>\n                {\n                    correct / questionEachLevel > passRate ? \n                    <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    endIcon={<Send />}\n                    value={Number(currentLevel)+1}\n                    onClick = {(event)=>{\n                            handleStartClick(event);\n                            handleReset();\n                        }\n                    }\n                    >\n                        Go Next Level\n                    </Button>\n                    :\n                    <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    endIcon={<Replay />}\n                    onClick = {handleReset}\n                    >\n                        Try Again\n                    </Button>\n                }\n            </div>\n        }\n      </>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 240,\n    textAlign: \"left\",\n    verticalAlign: \"top\",\n    margin: \"0 10px 30px 10px\"\n  },\n  media: {\n    height: 140,\n  },\n  button: {\n    margin: \"0 5px 15px\",\n    width: \"100%\"\n  }\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles()\n  const {title, description, level, handleStartClick, disabled} = props\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        {/* <CardMedia\n          className={classes.media}\n          image=\"https://via.placeholder.com/250x150\"\n          title={title}\n        /> */}\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button variant=\"contained\" color=\"primary\" size=\"large\" \n        disabled={disabled} className={classes.button} value={level} onClick={handleStartClick}>\n          Start\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Chip} from '@material-ui/core';\nimport useLocalStorage from './components/useLocalStorage';\nimport useUpdateLogger from './components/useUpdateLogger';\nimport data from './data/words.json';\nimport Question from './views/Question'\nimport MediaCard from './components/MediaCard'\n\nfunction App() {\n\n  const questionEachLevel = 25\n  const [showQuestion, setShowQuestion] = useState(false)\n  const [words, setWords] = useState([])\n  const [currentLevel, setCurrentLevel] = useState(1)\n  const [userLevel, setUserLevel] = useLocalStorage(\"userLevel\",1)\n  useUpdateLogger(userLevel)\n  \n  let j = 0\n  const cards = data.map((words,i) => {\n    if(i%questionEachLevel === 0) {\n      j++\n      let desc = `Click START to challenge level ${j} `\n      let disabled = false\n      if(userLevel<j) {\n        desc = `Please finish level ${j-1} to unlock`\n        disabled = true\n      }\n      return (\n        <MediaCard key={i} title={\"Level \"+j} level={j} description={desc} disabled={disabled} handleStartClick={handleStartClick} />  \n      )\n    }\n    return \"\"\n  })\n\n  const exampleData = [\"tree\",\"leaf\",\"flower\",\"(petal)\"]\n  const example = exampleData.map((word,i)=>{\n    return (\n      <span key={i}>\n        <Chip label={word} variant=\"outlined\" /> {i!==3 && (i===1? ' :: ':' : ')}\n        {i===1&&<span className=\"newMobileRow\"></span>}\n      </span>\n    )\n  })\n\n  function handleStartClick(e){\n    const level = e.currentTarget.value\n    setCurrentLevel(Number(level))\n    const lowerRange = questionEachLevel*(level-1)\n    const upperRange = questionEachLevel*level\n    setWords(data.filter((wordsArray,i)=>{\n        return wordsArray.id >= lowerRange && wordsArray.id <= upperRange\n    }))\n    setShowQuestion(true)\n  }\n\n  function handleQuit() {\n    setShowQuestion(false)\n  }\n\n  function unlockNextLevel() {\n    if(userLevel === currentLevel){\n      setUserLevel(prevLevel => {\n        return prevLevel + 1\n      })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        !showQuestion ?\n        <div>\n          <h1>Analogy Master</h1>\n          <p className=\"description\">An analogy is a comparison of two things to show their relation of the similarities, logical relations, geographical, historical, or differences.</p>\n          <h3>Let's try this:</h3>\n          <div className=\"question\">\n            {example}\n          </div>\n          <p className=\"explanation\"><b><u>Tree</u></b> is to <b><u>leaf</u></b> as <b><u>flower</u></b> is to <b><u>petal</u></b>.</p><br />\n          <div className=\"listCards\">\n            {/* <MediaCard title=\"Before Start\" description={\"See more examples from here\"} handleStartClick={handleStartClick} />   */}\n            {cards}\n          </div>\n          <p className=\"hints\">Every level has {questionEachLevel} questions. Pass 50% can unlock next level.</p>\n        </div>\n        :\n        <Question words={words} currentLevel={currentLevel} questionEachLevel={questionEachLevel} \n        handleQuit={handleQuit} unlockNextLevel={unlockNextLevel} handleStartClick={handleStartClick} /> \n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\n\nexport default function useUpdateLogger(value){\n    useEffect(()=>{\n        console.log(value)\n    },[value])\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}